12:45:33.026 [Test worker] ERROR i.g.a.c.e.exam.db.builder.ExamTable.getValue - Fail to get value security_id[0, security]
com.github.jknack.handlebars.HandlebarsException: inline@345ecfcd:1:2: java.lang.IllegalStateException: could not execute helper: security
    inline@345ecfcd:1:2
	at com.github.jknack.handlebars.helper.MethodHelper.launderThrowable(MethodHelper.java:151)
	at com.github.jknack.handlebars.helper.MethodHelper.apply(MethodHelper.java:86)
	at com.github.jknack.handlebars.internal.Variable.value(Variable.java:167)
	at com.github.jknack.handlebars.internal.Variable.merge(Variable.java:146)
	at com.github.jknack.handlebars.internal.BaseTemplate.apply(BaseTemplate.java:126)
	at com.github.jknack.handlebars.internal.TemplateList.merge(TemplateList.java:95)
	at com.github.jknack.handlebars.internal.BaseTemplate.apply(BaseTemplate.java:126)
	at com.github.jknack.handlebars.internal.BaseTemplate.apply(BaseTemplate.java:114)
	at com.github.jknack.handlebars.internal.ForwardingTemplate.apply(ForwardingTemplate.java:100)
	at io.github.adven27.concordion.extensions.exam.core.handlebars.HandlebarsSupportKt.resolve(HandlebarsSupport.kt:51)
	at io.github.adven27.concordion.extensions.exam.core.handlebars.HandlebarsSupportKt.resolveObj(HandlebarsSupport.kt:57)
	at io.github.adven27.concordion.extensions.exam.core.PlaceholdersResolver.resolveToObj(PlaceholdersResolver.kt:20)
	at io.github.adven27.concordion.extensions.exam.db.builder.ExamTable.getValue(DataSet.kt:172)
	at io.github.adven27.concordion.extensions.exam.db.builder.ExamTable.getValue(DataSet.kt:168)
	at org.dbunit.operation.AbstractBatchOperation.isEmpty(AbstractBatchOperation.java:77)
	at org.dbunit.operation.AbstractBatchOperation.execute(AbstractBatchOperation.java:145)
	at org.dbunit.operation.CompositeOperation.execute(CompositeOperation.java:79)
	at io.github.adven27.concordion.extensions.exam.db.commands.set.SetCommand.setUp(SetCommand.kt:37)
	at io.github.adven27.concordion.extensions.exam.db.commands.set.SetCommand.setUp(SetCommand.kt:20)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamSetUpCommand.setUp(ExamVerifyCommand.kt:96)
	at org.concordion.api.AbstractCommandDecorator$1.run(AbstractCommandDecorator.java:17)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.setUp(AbstractCommandDecorator.java:15)
	at org.concordion.api.AbstractCommandDecorator$1.run(AbstractCommandDecorator.java:17)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.setUp(AbstractCommandDecorator.java:15)
	at org.concordion.api.CommandCall.setUp(CommandCall.java:64)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:32)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamCommand.execute(ExamCommand.kt:62)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.ExampleCommand.execute(ExampleCommand.java:49)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:76)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:105)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:62)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:49)
	at org.concordion.internal.runner.DefaultConcordionRunner.runJUnitClass(DefaultConcordionRunner.java:78)
	at org.concordion.internal.runner.DefaultConcordionRunner.runTestClass(DefaultConcordionRunner.java:44)
	at org.concordion.internal.runner.DefaultConcordionRunner.execute(DefaultConcordionRunner.java:19)
	at org.concordion.internal.command.SequentialRunStrategy.call(SequentialRunStrategy.java:10)
	at org.concordion.internal.command.RunCommand.execute(RunCommand.java:81)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.SpecificationCommand.execute(SpecificationCommand.java:36)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:69)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:110)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:85)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy2/jdk.proxy2.$Proxy5.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.IllegalStateException: could not execute helper: security
	... 151 common frames omitted
Caused by: org.postgresql.util.PSQLException: ResultSet not positioned properly, perhaps you need to call next.
	at org.postgresql.jdbc.PgResultSet.getRawValue(PgResultSet.java:3149)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2387)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2836)
	at io.github.adven27.concordion.extensions.exam.db.DbHelpers$queryIntFrom$1.invoke(DbPlugin.kt:239)
	at io.github.adven27.concordion.extensions.exam.db.DbHelpers$queryIntFrom$1.invoke(DbPlugin.kt:237)
	at io.github.adven27.concordion.extensions.exam.db.DbTester.useStatement(DbTester.kt:100)
	at io.github.adven27.concordion.extensions.exam.db.DbHelpers.queryIntFrom(DbPlugin.kt:237)
	at specs.DbModelHelpers.security(DbModelHelpers.kt:7)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at com.github.jknack.handlebars.helper.MethodHelper.apply(MethodHelper.java:79)
	... 149 common frames omitted
12:45:33.031 [Test worker] ERROR i.g.a.c.e.exam.db.builder.ExamTable.getValue - Fail to get value security_id[0, security]
com.github.jknack.handlebars.HandlebarsException: inline@345ecfcd:1:2: java.lang.IllegalStateException: could not execute helper: security
    inline@345ecfcd:1:2
	at com.github.jknack.handlebars.helper.MethodHelper.launderThrowable(MethodHelper.java:151)
	at com.github.jknack.handlebars.helper.MethodHelper.apply(MethodHelper.java:86)
	at com.github.jknack.handlebars.internal.Variable.value(Variable.java:167)
	at com.github.jknack.handlebars.internal.Variable.merge(Variable.java:146)
	at com.github.jknack.handlebars.internal.BaseTemplate.apply(BaseTemplate.java:126)
	at com.github.jknack.handlebars.internal.TemplateList.merge(TemplateList.java:95)
	at com.github.jknack.handlebars.internal.BaseTemplate.apply(BaseTemplate.java:126)
	at com.github.jknack.handlebars.internal.BaseTemplate.apply(BaseTemplate.java:114)
	at com.github.jknack.handlebars.internal.ForwardingTemplate.apply(ForwardingTemplate.java:100)
	at io.github.adven27.concordion.extensions.exam.core.handlebars.HandlebarsSupportKt.resolve(HandlebarsSupport.kt:51)
	at io.github.adven27.concordion.extensions.exam.core.handlebars.HandlebarsSupportKt.resolveObj(HandlebarsSupport.kt:57)
	at io.github.adven27.concordion.extensions.exam.core.PlaceholdersResolver.resolveToObj(PlaceholdersResolver.kt:20)
	at io.github.adven27.concordion.extensions.exam.db.builder.ExamTable.getValue(DataSet.kt:172)
	at io.github.adven27.concordion.extensions.exam.db.builder.ExamTable.getValue(DataSet.kt:168)
	at org.dbunit.operation.InsertOperation.getIgnoreMapping(InsertOperation.java:121)
	at org.dbunit.operation.AbstractBatchOperation.execute(AbstractBatchOperation.java:183)
	at org.dbunit.operation.CompositeOperation.execute(CompositeOperation.java:79)
	at io.github.adven27.concordion.extensions.exam.db.commands.set.SetCommand.setUp(SetCommand.kt:37)
	at io.github.adven27.concordion.extensions.exam.db.commands.set.SetCommand.setUp(SetCommand.kt:20)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamSetUpCommand.setUp(ExamVerifyCommand.kt:96)
	at org.concordion.api.AbstractCommandDecorator$1.run(AbstractCommandDecorator.java:17)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.setUp(AbstractCommandDecorator.java:15)
	at org.concordion.api.AbstractCommandDecorator$1.run(AbstractCommandDecorator.java:17)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.setUp(AbstractCommandDecorator.java:15)
	at org.concordion.api.CommandCall.setUp(CommandCall.java:64)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:32)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamCommand.execute(ExamCommand.kt:62)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.ExampleCommand.execute(ExampleCommand.java:49)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:76)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:105)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:62)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:49)
	at org.concordion.internal.runner.DefaultConcordionRunner.runJUnitClass(DefaultConcordionRunner.java:78)
	at org.concordion.internal.runner.DefaultConcordionRunner.runTestClass(DefaultConcordionRunner.java:44)
	at org.concordion.internal.runner.DefaultConcordionRunner.execute(DefaultConcordionRunner.java:19)
	at org.concordion.internal.command.SequentialRunStrategy.call(SequentialRunStrategy.java:10)
	at org.concordion.internal.command.RunCommand.execute(RunCommand.java:81)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.SpecificationCommand.execute(SpecificationCommand.java:36)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:69)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:110)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:85)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy2/jdk.proxy2.$Proxy5.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.IllegalStateException: could not execute helper: security
	... 151 common frames omitted
Caused by: org.postgresql.util.PSQLException: ResultSet not positioned properly, perhaps you need to call next.
	at org.postgresql.jdbc.PgResultSet.getRawValue(PgResultSet.java:3149)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2387)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2836)
	at io.github.adven27.concordion.extensions.exam.db.DbHelpers$queryIntFrom$1.invoke(DbPlugin.kt:239)
	at io.github.adven27.concordion.extensions.exam.db.DbHelpers$queryIntFrom$1.invoke(DbPlugin.kt:237)
	at io.github.adven27.concordion.extensions.exam.db.DbTester.useStatement(DbTester.kt:100)
	at io.github.adven27.concordion.extensions.exam.db.DbHelpers.queryIntFrom(DbPlugin.kt:237)
	at specs.DbModelHelpers.security(DbModelHelpers.kt:7)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at com.github.jknack.handlebars.helper.MethodHelper.apply(MethodHelper.java:79)
	... 149 common frames omitted
12:45:33.035 [Test worker] ERROR i.g.a.c.e.exam.db.builder.ExamTable.getValue - Fail to get value security_id[0, security]
com.github.jknack.handlebars.HandlebarsException: inline@345ecfcd:1:2: java.lang.IllegalStateException: could not execute helper: security
    inline@345ecfcd:1:2
	at com.github.jknack.handlebars.helper.MethodHelper.launderThrowable(MethodHelper.java:151)
	at com.github.jknack.handlebars.helper.MethodHelper.apply(MethodHelper.java:86)
	at com.github.jknack.handlebars.internal.Variable.value(Variable.java:167)
	at com.github.jknack.handlebars.internal.Variable.merge(Variable.java:146)
	at com.github.jknack.handlebars.internal.BaseTemplate.apply(BaseTemplate.java:126)
	at com.github.jknack.handlebars.internal.TemplateList.merge(TemplateList.java:95)
	at com.github.jknack.handlebars.internal.BaseTemplate.apply(BaseTemplate.java:126)
	at com.github.jknack.handlebars.internal.BaseTemplate.apply(BaseTemplate.java:114)
	at com.github.jknack.handlebars.internal.ForwardingTemplate.apply(ForwardingTemplate.java:100)
	at io.github.adven27.concordion.extensions.exam.core.handlebars.HandlebarsSupportKt.resolve(HandlebarsSupport.kt:51)
	at io.github.adven27.concordion.extensions.exam.core.handlebars.HandlebarsSupportKt.resolveObj(HandlebarsSupport.kt:57)
	at io.github.adven27.concordion.extensions.exam.core.PlaceholdersResolver.resolveToObj(PlaceholdersResolver.kt:20)
	at io.github.adven27.concordion.extensions.exam.db.builder.ExamTable.getValue(DataSet.kt:172)
	at io.github.adven27.concordion.extensions.exam.db.builder.ExamTable.getValue(DataSet.kt:168)
	at org.dbunit.operation.AbstractBatchOperation.execute(AbstractBatchOperation.java:203)
	at org.dbunit.operation.CompositeOperation.execute(CompositeOperation.java:79)
	at io.github.adven27.concordion.extensions.exam.db.commands.set.SetCommand.setUp(SetCommand.kt:37)
	at io.github.adven27.concordion.extensions.exam.db.commands.set.SetCommand.setUp(SetCommand.kt:20)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamSetUpCommand.setUp(ExamVerifyCommand.kt:96)
	at org.concordion.api.AbstractCommandDecorator$1.run(AbstractCommandDecorator.java:17)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.setUp(AbstractCommandDecorator.java:15)
	at org.concordion.api.AbstractCommandDecorator$1.run(AbstractCommandDecorator.java:17)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.setUp(AbstractCommandDecorator.java:15)
	at org.concordion.api.CommandCall.setUp(CommandCall.java:64)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:32)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamCommand.execute(ExamCommand.kt:62)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.ExampleCommand.execute(ExampleCommand.java:49)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:76)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:105)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:62)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:49)
	at org.concordion.internal.runner.DefaultConcordionRunner.runJUnitClass(DefaultConcordionRunner.java:78)
	at org.concordion.internal.runner.DefaultConcordionRunner.runTestClass(DefaultConcordionRunner.java:44)
	at org.concordion.internal.runner.DefaultConcordionRunner.execute(DefaultConcordionRunner.java:19)
	at org.concordion.internal.command.SequentialRunStrategy.call(SequentialRunStrategy.java:10)
	at org.concordion.internal.command.RunCommand.execute(RunCommand.java:81)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.SpecificationCommand.execute(SpecificationCommand.java:36)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:69)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:110)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:85)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy2/jdk.proxy2.$Proxy5.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.IllegalStateException: could not execute helper: security
	... 150 common frames omitted
Caused by: org.postgresql.util.PSQLException: ResultSet not positioned properly, perhaps you need to call next.
	at org.postgresql.jdbc.PgResultSet.getRawValue(PgResultSet.java:3149)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2387)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2836)
	at io.github.adven27.concordion.extensions.exam.db.DbHelpers$queryIntFrom$1.invoke(DbPlugin.kt:239)
	at io.github.adven27.concordion.extensions.exam.db.DbHelpers$queryIntFrom$1.invoke(DbPlugin.kt:237)
	at io.github.adven27.concordion.extensions.exam.db.DbTester.useStatement(DbTester.kt:100)
	at io.github.adven27.concordion.extensions.exam.db.DbHelpers.queryIntFrom(DbPlugin.kt:237)
	at specs.DbModelHelpers.security(DbModelHelpers.kt:7)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at com.github.jknack.handlebars.helper.MethodHelper.apply(MethodHelper.java:79)
	... 148 common frames omitted
12:45:33.035 [Test worker] ERROR o.d.operation.AbstractBatchOperation.execute - execute: Error casting value for table 'security_id' and column 'security'
12:45:33.051 [Test worker] ERROR o.dbunit.assertion.DbUnitAssertBase.compareRowCounts - org.dbunit.assertion.DbComparisonFailure[row count (table=security)expected:<2>but was:<6>]
12:45:33.052 [Test worker] WARN  i.g.a.c.e.e.d.c.check.DbVerifier.verify-0E7RQCE - Check failed
io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier$TableSizeMismatch: table size mismatch
	at io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier.dbUnitAssert(DbVerifier.kt:77)
	at io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier.verify-0E7RQCE(DbVerifier.kt:56)
	at io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier.verify-0E7RQCE(DbVerifier.kt:22)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamAssertCommand.verify(ExamVerifyCommand.kt:111)
	at io.github.adven27.concordion.extensions.exam.db.commands.check.CheckCommand.verify(CheckCommand.kt:43)
	at org.concordion.api.AbstractCommandDecorator$3.run(AbstractCommandDecorator.java:33)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.verify(AbstractCommandDecorator.java:31)
	at org.concordion.api.AbstractCommandDecorator$3.run(AbstractCommandDecorator.java:33)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.verify(AbstractCommandDecorator.java:31)
	at org.concordion.api.CommandCall.verify(CommandCall.java:76)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:34)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamCommand.execute(ExamCommand.kt:62)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.ExampleCommand.execute(ExampleCommand.java:49)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:76)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:105)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:62)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:49)
	at org.concordion.internal.runner.DefaultConcordionRunner.runJUnitClass(DefaultConcordionRunner.java:78)
	at org.concordion.internal.runner.DefaultConcordionRunner.runTestClass(DefaultConcordionRunner.java:44)
	at org.concordion.internal.runner.DefaultConcordionRunner.execute(DefaultConcordionRunner.java:19)
	at org.concordion.internal.command.SequentialRunStrategy.call(SequentialRunStrategy.java:10)
	at org.concordion.internal.command.RunCommand.execute(RunCommand.java:81)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.SpecificationCommand.execute(SpecificationCommand.java:36)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:69)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:110)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:85)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy2/jdk.proxy2.$Proxy5.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.dbunit.assertion.DbComparisonFailure: row count (table=security) expected:<2> but was:<6>
	at org.dbunit.assertion.DefaultFailureHandler$DefaultFailureFactory.createFailure(DefaultFailureHandler.java:323)
	at org.dbunit.assertion.DefaultFailureHandler.createFailure(DefaultFailureHandler.java:105)
	at org.dbunit.assertion.DbUnitAssertBase.compareRowCounts(DbUnitAssertBase.java:171)
	at org.dbunit.assertion.DbUnitAssertBase.assertWithValueComparer(DbUnitAssertBase.java:417)
	at org.dbunit.Assertion.assertWithValueComparer(Assertion.java:238)
	at io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier.assert(DbVerifier.kt:85)
	at io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier.dbUnitAssert(DbVerifier.kt:75)
	... 135 common frames omitted
12:45:33.065 [awaitility[Await DB table field_value]] ERROR o.dbunit.assertion.DbUnitAssertBase.compareRowCounts - org.dbunit.assertion.DbComparisonFailure[row count (table=field_value)expected:<2>but was:<0>]
12:45:33.102 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  r.a.m.a.s.c.i.ListenersController.consumerPausedEvent - Got ConsumerPausedEvent [reason=For batch retry, partitions=[md.security.data.batch-0]]
12:45:35.232 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] ERROR r.a.m.a.securitiesapi.SecuritiesApi.dlqPublishingRecoverer$lambda$5 - Failed to process message: ConsumerRecord(topic = md.security.data.batch, partition = 0, leaderEpoch = 0, offset = 6, CreateTime = 1712051133046, serialized key size = -1, serialized value size = 420, headers = RecordHeaders(headers = [RecordHeader(key = b3, value = [54, 49, 99, 53, 48, 98, 50, 52, 98, 48, 57, 100, 52, 54, 48, 52, 45, 54, 49, 99, 53, 48, 98, 50, 52, 98, 48, 57, 100, 52, 54, 48, 52, 45, 48])], isReadOnly = false), key = null, value = {
  "status": "SECURITY_FOUND",
  "integrationSource": "BDL",
  "isin": "ISIN1",
  "timestamp": "2020-01-01T00:00:00",
  "security": {
    "isin": "ISIN1",
    "name": "MINFIN ROSSII 2 31/10/20",
    "type": "SEC",
    "active": false,
    "statusDescription": "Размещен",
    "fields": [
      
        {
          "code": "ISIN"
          
          , "value": "ISIN1" 
          
        } 
      
    ]
  }
}), sending to DLQ: md.security.data-0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventBatchListener.securityDataEventBatch(java.util.List<ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEvent>,java.util.List<? extends org.springframework.kafka.support.converter.ConversionException>)' threw exception; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2720)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2318)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2288)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2231)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2141)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2024)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:363)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2298)
Caused by: org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:244)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1577)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:693)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:1036)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:376)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository.saveSecurities(SecurityRepository.kt:218)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository$$FastClassBySpringCGLIB$$cf05edcd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository$$EnhancerBySpringCGLIB$$c1486a3d.saveSecurities(<generated>)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.prioritiesAwareSave(SecurityService.kt:117)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.save(SecurityService.kt:102)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.saveSecurity(SecurityService.kt:78)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService$$FastClassBySpringCGLIB$$2d616b1b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService$$EnhancerBySpringCGLIB$$60e385a9.saveSecurity(<generated>)
	at ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventBatchListener.securityDataEventBatch(SecurityDataListener.kt:45)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:339)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:180)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:172)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:61)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2298)
	... 11 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:887)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:910)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1649)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.executeBatch(StatementWrapper.java:98)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$4(JdbcTemplate.java:1050)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:650)
	... 51 common frames omitted
12:45:35.240 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  r.a.m.a.s.c.i.ListenersController.consumerResumedEvent - Got ConsumerResumedEvent [partitions=[md.security.data.batch-0]]
12:45:36.289 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer.error - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventListener.securityDataEvent(ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEvent)' threw exception; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2707)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2588)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2457)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2335)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2006)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventListener.securityDataEvent(ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEvent)' threw exception; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2720)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2650)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2577)
	... 9 common frames omitted
Caused by: org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:244)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1577)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:693)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:1036)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:376)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository.saveSecurities(SecurityRepository.kt:218)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository$$FastClassBySpringCGLIB$$cf05edcd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository$$EnhancerBySpringCGLIB$$c1486a3d.saveSecurities(<generated>)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.prioritiesAwareSave(SecurityService.kt:117)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.save(SecurityService.kt:102)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.saveSecurity(SecurityService.kt:78)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService$$FastClassBySpringCGLIB$$2d616b1b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService$$EnhancerBySpringCGLIB$$60e385a9.saveSecurity(<generated>)
	at ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventListener.securityDataEvent(SecurityDataListener.kt:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$547e39f2.onMessage(<generated>)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2670)
	... 11 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:887)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:910)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1649)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.executeBatch(StatementWrapper.java:98)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$4(JdbcTemplate.java:1050)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:650)
	... 60 common frames omitted
12:45:37.337 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer.error - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventListener.securityDataEvent(ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEvent)' threw exception; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2707)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2588)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2457)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2335)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2006)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventListener.securityDataEvent(ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEvent)' threw exception; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2720)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2650)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2577)
	... 9 common frames omitted
Caused by: org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:244)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1577)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:693)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:1036)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:376)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository.saveSecurities(SecurityRepository.kt:218)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository$$FastClassBySpringCGLIB$$cf05edcd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository$$EnhancerBySpringCGLIB$$c1486a3d.saveSecurities(<generated>)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.prioritiesAwareSave(SecurityService.kt:117)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.save(SecurityService.kt:102)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.saveSecurity(SecurityService.kt:78)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService$$FastClassBySpringCGLIB$$2d616b1b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService$$EnhancerBySpringCGLIB$$60e385a9.saveSecurity(<generated>)
	at ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventListener.securityDataEvent(SecurityDataListener.kt:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$547e39f2.onMessage(<generated>)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2670)
	... 11 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:887)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:910)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1649)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.executeBatch(StatementWrapper.java:98)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$4(JdbcTemplate.java:1050)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:650)
	... 60 common frames omitted
12:45:37.358 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] ERROR r.a.m.a.securitiesapi.SecuritiesApi.dlqPublishingRecoverer$lambda$5 - Failed to process message: ConsumerRecord(topic = md.security.data, partition = 0, leaderEpoch = 0, offset = 1, CreateTime = 1712051135235, serialized key size = -1, serialized value size = 420, headers = RecordHeaders(headers = [RecordHeader(key = kafka_dlt-exception-fqcn, value = [111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 76, 105, 115, 116, 101, 110, 101, 114, 69, 120, 101, 99, 117, 116, 105, 111, 110, 70, 97, 105, 108, 101, 100, 69, 120, 99, 101, 112, 116, 105, 111, 110]), RecordHeader(key = kafka_dlt-exception-cause-fqcn, value = [111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 100, 97, 111, 46, 68, 117, 112, 108, 105, 99, 97, 116, 101, 75, 101, 121, 69, 120, 99, 101, 112, 116, 105, 111, 110]), RecordHeader(key = kafka_dlt-exception-message, value = [76, 105, 115, 116, 101, 110, 101, 114, 32, 109, 101, 116, 104, 111, 100, 32, 39, 112, 117, 98, 108, 105, 99, 32, 118, 111, 105, 100, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 83, 101, 99, 117, 114, 105, 116, 121, 68, 97, 116, 97, 69, 118, 101, 110, 116, 66, 97, 116, 99, 104, 76, 105, 115, 116, 101, 110, 101, 114, 46, 115, 101, 99, 117, 114, 105, 116, 121, 68, 97, 116, 97, 69, 118, 101, 110, 116, 66, 97, 116, 99, 104, 40, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 76, 105, 115, 116, 60, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 83, 101, 99, 117, 114, 105, 116, 121, 68, 97, 116, 97, 69, 118, 101, 110, 116, 62, 44, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 76, 105, 115, 116, 60, 63, 32, 101, 120, 116, 101, 110, 100, 115, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 115, 117, 112, 112, 111, 114, 116, 46, 99, 111, 110, 118, 101, 114, 116, 101, 114, 46, 67, 111, 110, 118, 101, 114, 115, 105, 111, 110, 69, 120, 99, 101, 112, 116, 105, 111, 110, 62, 41, 39, 32, 116, 104, 114, 101, 119, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 59, 32, 110, 101, 115, 116, 101, 100, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 105, 115, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 100, 97, 111, 46, 68, 117, 112, 108, 105, 99, 97, 116, 101, 75, 101, 121, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 80, 114, 101, 112, 97, 114, 101, 100, 83, 116, 97, 116, 101, 109, 101, 110, 116, 67, 97, 108, 108, 98, 97, 99, 107, 59, 32, 83, 81, 76, 32, 91, 10, 32, 32, 32, 32, 109, 101, 114, 103, 101, 32, 105, 110, 116, 111, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 10, 32, 32, 32, 32, 117, 115, 105, 110, 103, 32, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 119, 105, 116, 104, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 32, 119, 104, 101, 114, 101, 32, 40, 116, 121, 112, 101, 32, 61, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 95, 116, 121, 112, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 105, 110, 32, 40, 39, 73, 83, 73, 78, 39, 41, 41, 32, 97, 110, 100, 32, 105, 100, 32, 105, 110, 32, 40, 63, 41, 41, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 111, 117, 114, 99, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 61, 32, 63, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 101, 108, 101, 99, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 46, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 95, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 46, 105, 100, 32, 97, 115, 32, 115, 111, 117, 114, 99, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 117, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 114, 111, 109, 32, 115, 114, 99, 32, 108, 101, 102, 116, 32, 106, 111, 105, 110, 32, 105, 100, 115, 32, 111, 110, 32, 116, 114, 117, 101, 41, 32, 105, 110, 99, 10, 32, 32, 32, 32, 111, 110, 32, 40, 115, 101, 99, 46, 105, 100, 32, 61, 32, 105, 110, 99, 46, 115, 101, 99, 95, 105, 100, 41, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 32, 115, 101, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 110, 97, 109, 101, 32, 61, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112, 101, 32, 61, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 100, 95, 97, 116, 32, 61, 32, 99, 117, 114, 114, 101, 110, 116, 95, 116, 105, 109, 101, 115, 116, 97, 109, 112, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 32, 61, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 61, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 111, 117, 114, 99, 101, 32, 61, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 110, 111, 116, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 101, 114, 116, 32, 40, 105, 115, 105, 110, 44, 32, 110, 97, 109, 101, 44, 32, 116, 121, 112, 101, 44, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 32, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 108, 117, 101, 115, 32, 40, 105, 110, 99, 46, 117, 105, 100, 44, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 93, 59, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 59, 32, 110, 101, 115, 116, 101, 100, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 105, 115, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 117, 116, 105, 108, 46, 80, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 59, 32, 110, 101, 115, 116, 101, 100, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 105, 115, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 100, 97, 111, 46, 68, 117, 112, 108, 105, 99, 97, 116, 101, 75, 101, 121, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 80, 114, 101, 112, 97, 114, 101, 100, 83, 116, 97, 116, 101, 109, 101, 110, 116, 67, 97, 108, 108, 98, 97, 99, 107, 59, 32, 83, 81, 76, 32, 91, 10, 32, 32, 32, 32, 109, 101, 114, 103, 101, 32, 105, 110, 116, 111, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 10, 32, 32, 32, 32, 117, 115, 105, 110, 103, 32, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 119, 105, 116, 104, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 32, 119, 104, 101, 114, 101, 32, 40, 116, 121, 112, 101, 32, 61, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 95, 116, 121, 112, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 105, 110, 32, 40, 39, 73, 83, 73, 78, 39, 41, 41, 32, 97, 110, 100, 32, 105, 100, 32, 105, 110, 32, 40, 63, 41, 41, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 111, 117, 114, 99, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 61, 32, 63, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 101, 108, 101, 99, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 46, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 95, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 46, 105, 100, 32, 97, 115, 32, 115, 111, 117, 114, 99, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 117, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 114, 111, 109, 32, 115, 114, 99, 32, 108, 101, 102, 116, 32, 106, 111, 105, 110, 32, 105, 100, 115, 32, 111, 110, 32, 116, 114, 117, 101, 41, 32, 105, 110, 99, 10, 32, 32, 32, 32, 111, 110, 32, 40, 115, 101, 99, 46, 105, 100, 32, 61, 32, 105, 110, 99, 46, 115, 101, 99, 95, 105, 100, 41, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 32, 115, 101, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 110, 97, 109, 101, 32, 61, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112, 101, 32, 61, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 100, 95, 97, 116, 32, 61, 32, 99, 117, 114, 114, 101, 110, 116, 95, 116, 105, 109, 101, 115, 116, 97, 109, 112, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 32, 61, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 61, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 111, 117, 114, 99, 101, 32, 61, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 110, 111, 116, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 101, 114, 116, 32, 40, 105, 115, 105, 110, 44, 32, 110, 97, 109, 101, 44, 32, 116, 121, 112, 101, 44, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 32, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 108, 117, 101, 115, 32, 40, 105, 110, 99, 46, 117, 105, 100, 44, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 93, 59, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 59, 32, 110, 101, 115, 116, 101, 100, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 105, 115, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 117, 116, 105, 108, 46, 80, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46]), RecordHeader(key = kafka_dlt-exception-stacktrace, value = [111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 76, 105, 115, 116, 101, 110, 101, 114, 69, 120, 101, 99, 117, 116, 105, 111, 110, 70, 97, 105, 108, 101, 100, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 76, 105, 115, 116, 101, 110, 101, 114, 32, 109, 101, 116, 104, 111, 100, 32, 39, 112, 117, 98, 108, 105, 99, 32, 118, 111, 105, 100, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 83, 101, 99, 117, 114, 105, 116, 121, 68, 97, 116, 97, 69, 118, 101, 110, 116, 66, 97, 116, 99, 104, 76, 105, 115, 116, 101, 110, 101, 114, 46, 115, 101, 99, 117, 114, 105, 116, 121, 68, 97, 116, 97, 69, 118, 101, 110, 116, 66, 97, 116, 99, 104, 40, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 76, 105, 115, 116, 60, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 83, 101, 99, 117, 114, 105, 116, 121, 68, 97, 116, 97, 69, 118, 101, 110, 116, 62, 44, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 76, 105, 115, 116, 60, 63, 32, 101, 120, 116, 101, 110, 100, 115, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 115, 117, 112, 112, 111, 114, 116, 46, 99, 111, 110, 118, 101, 114, 116, 101, 114, 46, 67, 111, 110, 118, 101, 114, 115, 105, 111, 110, 69, 120, 99, 101, 112, 116, 105, 111, 110, 62, 41, 39, 32, 116, 104, 114, 101, 119, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 59, 32, 110, 101, 115, 116, 101, 100, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 105, 115, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 100, 97, 111, 46, 68, 117, 112, 108, 105, 99, 97, 116, 101, 75, 101, 121, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 80, 114, 101, 112, 97, 114, 101, 100, 83, 116, 97, 116, 101, 109, 101, 110, 116, 67, 97, 108, 108, 98, 97, 99, 107, 59, 32, 83, 81, 76, 32, 91, 10, 32, 32, 32, 32, 109, 101, 114, 103, 101, 32, 105, 110, 116, 111, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 10, 32, 32, 32, 32, 117, 115, 105, 110, 103, 32, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 119, 105, 116, 104, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 32, 119, 104, 101, 114, 101, 32, 40, 116, 121, 112, 101, 32, 61, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 95, 116, 121, 112, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 105, 110, 32, 40, 39, 73, 83, 73, 78, 39, 41, 41, 32, 97, 110, 100, 32, 105, 100, 32, 105, 110, 32, 40, 63, 41, 41, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 111, 117, 114, 99, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 61, 32, 63, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 101, 108, 101, 99, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 46, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 95, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 46, 105, 100, 32, 97, 115, 32, 115, 111, 117, 114, 99, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 117, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 114, 111, 109, 32, 115, 114, 99, 32, 108, 101, 102, 116, 32, 106, 111, 105, 110, 32, 105, 100, 115, 32, 111, 110, 32, 116, 114, 117, 101, 41, 32, 105, 110, 99, 10, 32, 32, 32, 32, 111, 110, 32, 40, 115, 101, 99, 46, 105, 100, 32, 61, 32, 105, 110, 99, 46, 115, 101, 99, 95, 105, 100, 41, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 32, 115, 101, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 110, 97, 109, 101, 32, 61, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112, 101, 32, 61, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 100, 95, 97, 116, 32, 61, 32, 99, 117, 114, 114, 101, 110, 116, 95, 116, 105, 109, 101, 115, 116, 97, 109, 112, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 32, 61, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 61, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 111, 117, 114, 99, 101, 32, 61, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 110, 111, 116, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 101, 114, 116, 32, 40, 105, 115, 105, 110, 44, 32, 110, 97, 109, 101, 44, 32, 116, 121, 112, 101, 44, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 32, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 108, 117, 101, 115, 32, 40, 105, 110, 99, 46, 117, 105, 100, 44, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 93, 59, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 59, 32, 110, 101, 115, 116, 101, 100, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 105, 115, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 117, 116, 105, 108, 46, 80, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 59, 32, 110, 101, 115, 116, 101, 100, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 105, 115, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 100, 97, 111, 46, 68, 117, 112, 108, 105, 99, 97, 116, 101, 75, 101, 121, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 80, 114, 101, 112, 97, 114, 101, 100, 83, 116, 97, 116, 101, 109, 101, 110, 116, 67, 97, 108, 108, 98, 97, 99, 107, 59, 32, 83, 81, 76, 32, 91, 10, 32, 32, 32, 32, 109, 101, 114, 103, 101, 32, 105, 110, 116, 111, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 10, 32, 32, 32, 32, 117, 115, 105, 110, 103, 32, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 119, 105, 116, 104, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 32, 119, 104, 101, 114, 101, 32, 40, 116, 121, 112, 101, 32, 61, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 95, 116, 121, 112, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 105, 110, 32, 40, 39, 73, 83, 73, 78, 39, 41, 41, 32, 97, 110, 100, 32, 105, 100, 32, 105, 110, 32, 40, 63, 41, 41, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 111, 117, 114, 99, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 61, 32, 63, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 101, 108, 101, 99, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 46, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 95, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 46, 105, 100, 32, 97, 115, 32, 115, 111, 117, 114, 99, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 117, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 114, 111, 109, 32, 115, 114, 99, 32, 108, 101, 102, 116, 32, 106, 111, 105, 110, 32, 105, 100, 115, 32, 111, 110, 32, 116, 114, 117, 101, 41, 32, 105, 110, 99, 10, 32, 32, 32, 32, 111, 110, 32, 40, 115, 101, 99, 46, 105, 100, 32, 61, 32, 105, 110, 99, 46, 115, 101, 99, 95, 105, 100, 41, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 32, 115, 101, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 110, 97, 109, 101, 32, 61, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112, 101, 32, 61, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 100, 95, 97, 116, 32, 61, 32, 99, 117, 114, 114, 101, 110, 116, 95, 116, 105, 109, 101, 115, 116, 97, 109, 112, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 32, 61, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 61, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 111, 117, 114, 99, 101, 32, 61, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 110, 111, 116, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 101, 114, 116, 32, 40, 105, 115, 105, 110, 44, 32, 110, 97, 109, 101, 44, 32, 116, 121, 112, 101, 44, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 32, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 108, 117, 101, 115, 32, 40, 105, 110, 99, 46, 117, 105, 100, 44, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 93, 59, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 59, 32, 110, 101, 115, 116, 101, 100, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 105, 115, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 117, 116, 105, 108, 46, 80, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 100, 101, 99, 111, 114, 97, 116, 101, 69, 120, 99, 101, 112, 116, 105, 111, 110, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 50, 55, 50, 48, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 100, 111, 73, 110, 118, 111, 107, 101, 66, 97, 116, 99, 104, 79, 110, 77, 101, 115, 115, 97, 103, 101, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 50, 51, 49, 56, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 105, 110, 118, 111, 107, 101, 66, 97, 116, 99, 104, 79, 110, 77, 101, 115, 115, 97, 103, 101, 87, 105, 116, 104, 82, 101, 99, 111, 114, 100, 115, 79, 114, 76, 105, 115, 116, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 50, 50, 56, 56, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 105, 110, 118, 111, 107, 101, 66, 97, 116, 99, 104, 79, 110, 77, 101, 115, 115, 97, 103, 101, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 50, 50, 51, 49, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 100, 111, 73, 110, 118, 111, 107, 101, 66, 97, 116, 99, 104, 76, 105, 115, 116, 101, 110, 101, 114, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 50, 49, 52, 49, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 105, 110, 118, 111, 107, 101, 66, 97, 116, 99, 104, 76, 105, 115, 116, 101, 110, 101, 114, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 50, 48, 50, 52, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 105, 110, 118, 111, 107, 101, 76, 105, 115, 116, 101, 110, 101, 114, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 50, 48, 48, 51, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 105, 110, 118, 111, 107, 101, 73, 102, 72, 97, 118, 101, 82, 101, 99, 111, 114, 100, 115, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 49, 51, 55, 53, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 112, 111, 108, 108, 65, 110, 100, 73, 110, 118, 111, 107, 101, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 49, 51, 54, 54, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 114, 117, 110, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 49, 50, 53, 55, 41, 10, 9, 97, 116, 32, 106, 97, 118, 97, 46, 98, 97, 115, 101, 47, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 99, 111, 110, 99, 117, 114, 114, 101, 110, 116, 46, 69, 120, 101, 99, 117, 116, 111, 114, 115, 36, 82, 117, 110, 110, 97, 98, 108, 101, 65, 100, 97, 112, 116, 101, 114, 46, 99, 97, 108, 108, 40, 69, 120, 101, 99, 117, 116, 111, 114, 115, 46, 106, 97, 118, 97, 58, 53, 51, 57, 41, 10, 9, 97, 116, 32, 106, 97, 118, 97, 46, 98, 97, 115, 101, 47, 106, 97, 118, 97, 46, 117, 116, 105, 108, 46, 99, 111, 110, 99, 117, 114, 114, 101, 110, 116, 46, 70, 117, 116, 117, 114, 101, 84, 97, 115, 107, 46, 114, 117, 110, 40, 70, 117, 116, 117, 114, 101, 84, 97, 115, 107, 46, 106, 97, 118, 97, 58, 50, 54, 52, 41, 10, 9, 97, 116, 32, 106, 97, 118, 97, 46, 98, 97, 115, 101, 47, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 84, 104, 114, 101, 97, 100, 46, 114, 117, 110, 40, 84, 104, 114, 101, 97, 100, 46, 106, 97, 118, 97, 58, 56, 51, 51, 41, 10, 9, 83, 117, 112, 112, 114, 101, 115, 115, 101, 100, 58, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 76, 105, 115, 116, 101, 110, 101, 114, 69, 120, 101, 99, 117, 116, 105, 111, 110, 70, 97, 105, 108, 101, 100, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 82, 101, 115, 116, 111, 114, 101, 100, 32, 83, 116, 97, 99, 107, 32, 84, 114, 97, 99, 101, 10, 9, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 97, 100, 97, 112, 116, 101, 114, 46, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 105, 110, 118, 111, 107, 101, 72, 97, 110, 100, 108, 101, 114, 40, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 106, 97, 118, 97, 58, 51, 54, 51, 41, 10, 9, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 97, 100, 97, 112, 116, 101, 114, 46, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 105, 110, 118, 111, 107, 101, 40, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 106, 97, 118, 97, 58, 49, 56, 48, 41, 10, 9, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 97, 100, 97, 112, 116, 101, 114, 46, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 111, 110, 77, 101, 115, 115, 97, 103, 101, 40, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 106, 97, 118, 97, 58, 49, 55, 50, 41, 10, 9, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 97, 100, 97, 112, 116, 101, 114, 46, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 111, 110, 77, 101, 115, 115, 97, 103, 101, 40, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 106, 97, 118, 97, 58, 54, 49, 41, 10, 9, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 100, 111, 73, 110, 118, 111, 107, 101, 66, 97, 116, 99, 104, 79, 110, 77, 101, 115, 115, 97, 103, 101, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 50, 50, 57, 56, 41, 10, 67, 97, 117, 115, 101, 100, 32, 98, 121, 58, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 100, 97, 111, 46, 68, 117, 112, 108, 105, 99, 97, 116, 101, 75, 101, 121, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 80, 114, 101, 112, 97, 114, 101, 100, 83, 116, 97, 116, 101, 109, 101, 110, 116, 67, 97, 108, 108, 98, 97, 99, 107, 59, 32, 83, 81, 76, 32, 91, 10, 32, 32, 32, 32, 109, 101, 114, 103, 101, 32, 105, 110, 116, 111, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 10, 32, 32, 32, 32, 117, 115, 105, 110, 103, 32, 40, 10, 32, 32, 32, 32, 32, 32, 32, 32, 119, 105, 116, 104, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 115, 101, 99, 117, 114, 105, 116, 121, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 32, 119, 104, 101, 114, 101, 32, 40, 116, 121, 112, 101, 32, 61, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 101, 99, 117, 114, 105, 116, 121, 95, 105, 100, 95, 116, 121, 112, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 105, 110, 32, 40, 39, 73, 83, 73, 78, 39, 41, 41, 32, 97, 110, 100, 32, 105, 100, 32, 105, 110, 32, 40, 63, 41, 41, 41, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 32, 97, 115, 32, 40, 115, 101, 108, 101, 99, 116, 32, 105, 100, 32, 102, 114, 111, 109, 32, 115, 111, 117, 114, 99, 101, 32, 119, 104, 101, 114, 101, 32, 99, 111, 100, 101, 32, 61, 32, 63, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 115, 101, 108, 101, 99, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 100, 115, 46, 115, 101, 99, 117, 114, 105, 116, 121, 32, 97, 115, 32, 115, 101, 99, 95, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 114, 99, 46, 105, 100, 32, 97, 115, 32, 115, 111, 117, 114, 99, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 117, 105, 100, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 97, 115, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 10, 32, 32, 32, 32, 32, 32, 32, 32, 102, 114, 111, 109, 32, 115, 114, 99, 32, 108, 101, 102, 116, 32, 106, 111, 105, 110, 32, 105, 100, 115, 32, 111, 110, 32, 116, 114, 117, 101, 41, 32, 105, 110, 99, 10, 32, 32, 32, 32, 111, 110, 32, 40, 115, 101, 99, 46, 105, 100, 32, 61, 32, 105, 110, 99, 46, 115, 101, 99, 95, 105, 100, 41, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 32, 115, 101, 116, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 110, 97, 109, 101, 32, 61, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 116, 121, 112, 101, 32, 61, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 117, 112, 100, 97, 116, 101, 100, 95, 97, 116, 32, 61, 32, 99, 117, 114, 114, 101, 110, 116, 95, 116, 105, 109, 101, 115, 116, 97, 109, 112, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 32, 61, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 61, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 111, 117, 114, 99, 101, 32, 61, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 10, 32, 32, 32, 32, 119, 104, 101, 110, 32, 110, 111, 116, 32, 109, 97, 116, 99, 104, 101, 100, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 115, 101, 114, 116, 32, 40, 105, 115, 105, 110, 44, 32, 110, 97, 109, 101, 44, 32, 116, 121, 112, 101, 44, 32, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 32, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 118, 97, 108, 117, 101, 115, 32, 40, 105, 110, 99, 46, 117, 105, 100, 44, 32, 105, 110, 99, 46, 110, 97, 109, 101, 44, 32, 105, 110, 99, 46, 116, 121, 112, 101, 44, 32, 105, 110, 99, 46, 105, 115, 95, 97, 99, 116, 105, 118, 101, 44, 32, 105, 110, 99, 46, 115, 116, 97, 116, 117, 115, 95, 100, 101, 115, 99, 44, 32, 105, 110, 99, 46, 115, 111, 117, 114, 99, 101, 41, 10, 32, 32, 32, 32, 93, 59, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 59, 32, 110, 101, 115, 116, 101, 100, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 105, 115, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 117, 116, 105, 108, 46, 80, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 106, 100, 98, 99, 46, 115, 117, 112, 112, 111, 114, 116, 46, 83, 81, 76, 69, 114, 114, 111, 114, 67, 111, 100, 101, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 84, 114, 97, 110, 115, 108, 97, 116, 111, 114, 46, 100, 111, 84, 114, 97, 110, 115, 108, 97, 116, 101, 40, 83, 81, 76, 69, 114, 114, 111, 114, 67, 111, 100, 101, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 84, 114, 97, 110, 115, 108, 97, 116, 111, 114, 46, 106, 97, 118, 97, 58, 50, 52, 52, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 106, 100, 98, 99, 46, 115, 117, 112, 112, 111, 114, 116, 46, 65, 98, 115, 116, 114, 97, 99, 116, 70, 97, 108, 108, 98, 97, 99, 107, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 84, 114, 97, 110, 115, 108, 97, 116, 111, 114, 46, 116, 114, 97, 110, 115, 108, 97, 116, 101, 40, 65, 98, 115, 116, 114, 97, 99, 116, 70, 97, 108, 108, 98, 97, 99, 107, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 84, 114, 97, 110, 115, 108, 97, 116, 111, 114, 46, 106, 97, 118, 97, 58, 55, 51, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 106, 100, 98, 99, 46, 99, 111, 114, 101, 46, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 116, 114, 97, 110, 115, 108, 97, 116, 101, 69, 120, 99, 101, 112, 116, 105, 111, 110, 40, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 106, 97, 118, 97, 58, 49, 53, 55, 55, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 106, 100, 98, 99, 46, 99, 111, 114, 101, 46, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 101, 120, 101, 99, 117, 116, 101, 40, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 106, 97, 118, 97, 58, 54, 54, 57, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 106, 100, 98, 99, 46, 99, 111, 114, 101, 46, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 101, 120, 101, 99, 117, 116, 101, 40, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 106, 97, 118, 97, 58, 54, 57, 51, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 106, 100, 98, 99, 46, 99, 111, 114, 101, 46, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 98, 97, 116, 99, 104, 85, 112, 100, 97, 116, 101, 40, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 106, 97, 118, 97, 58, 49, 48, 51, 54, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 106, 100, 98, 99, 46, 99, 111, 114, 101, 46, 110, 97, 109, 101, 100, 112, 97, 114, 97, 109, 46, 78, 97, 109, 101, 100, 80, 97, 114, 97, 109, 101, 116, 101, 114, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 98, 97, 116, 99, 104, 85, 112, 100, 97, 116, 101, 40, 78, 97, 109, 101, 100, 80, 97, 114, 97, 109, 101, 116, 101, 114, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 106, 97, 118, 97, 58, 51, 55, 54, 41, 10, 9, 97, 116, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 114, 101, 112, 111, 115, 105, 116, 111, 114, 121, 46, 83, 101, 99, 117, 114, 105, 116, 121, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121, 46, 115, 97, 118, 101, 83, 101, 99, 117, 114, 105, 116, 105, 101, 115, 40, 83, 101, 99, 117, 114, 105, 116, 121, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121, 46, 107, 116, 58, 50, 49, 56, 41, 10, 9, 97, 116, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 114, 101, 112, 111, 115, 105, 116, 111, 114, 121, 46, 83, 101, 99, 117, 114, 105, 116, 121, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121, 36, 36, 70, 97, 115, 116, 67, 108, 97, 115, 115, 66, 121, 83, 112, 114, 105, 110, 103, 67, 71, 76, 73, 66, 36, 36, 99, 102, 48, 53, 101, 100, 99, 100, 46, 105, 110, 118, 111, 107, 101, 40, 60, 103, 101, 110, 101, 114, 97, 116, 101, 100, 62, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 99, 103, 108, 105, 98, 46, 112, 114, 111, 120, 121, 46, 77, 101, 116, 104, 111, 100, 80, 114, 111, 120, 121, 46, 105, 110, 118, 111, 107, 101, 40, 77, 101, 116, 104, 111, 100, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 50, 49, 56, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 36, 67, 103, 108, 105, 98, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 105, 110, 118, 111, 107, 101, 74, 111, 105, 110, 112, 111, 105, 110, 116, 40, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 55, 57, 50, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 82, 101, 102, 108, 101, 99, 116, 105, 118, 101, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111, 99, 101, 101, 100, 40, 82, 101, 102, 108, 101, 99, 116, 105, 118, 101, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 106, 97, 118, 97, 58, 49, 54, 51, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 36, 67, 103, 108, 105, 98, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111, 99, 101, 101, 100, 40, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 55, 54, 50, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 100, 97, 111, 46, 115, 117, 112, 112, 111, 114, 116, 46, 80, 101, 114, 115, 105, 115, 116, 101, 110, 99, 101, 69, 120, 99, 101, 112, 116, 105, 111, 110, 84, 114, 97, 110, 115, 108, 97, 116, 105, 111, 110, 73, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 105, 110, 118, 111, 107, 101, 40, 80, 101, 114, 115, 105, 115, 116, 101, 110, 99, 101, 69, 120, 99, 101, 112, 116, 105, 111, 110, 84, 114, 97, 110, 115, 108, 97, 116, 105, 111, 110, 73, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 106, 97, 118, 97, 58, 49, 51, 55, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 82, 101, 102, 108, 101, 99, 116, 105, 118, 101, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111, 99, 101, 101, 100, 40, 82, 101, 102, 108, 101, 99, 116, 105, 118, 101, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 106, 97, 118, 97, 58, 49, 56, 54, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 36, 67, 103, 108, 105, 98, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111, 99, 101, 101, 100, 40, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 55, 54, 50, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 36, 68, 121, 110, 97, 109, 105, 99, 65, 100, 118, 105, 115, 101, 100, 73, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 105, 110, 116, 101, 114, 99, 101, 112, 116, 40, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 55, 48, 55, 41, 10, 9, 97, 116, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 114, 101, 112, 111, 115, 105, 116, 111, 114, 121, 46, 83, 101, 99, 117, 114, 105, 116, 121, 82, 101, 112, 111, 115, 105, 116, 111, 114, 121, 36, 36, 69, 110, 104, 97, 110, 99, 101, 114, 66, 121, 83, 112, 114, 105, 110, 103, 67, 71, 76, 73, 66, 36, 36, 99, 49, 52, 56, 54, 97, 51, 100, 46, 115, 97, 118, 101, 83, 101, 99, 117, 114, 105, 116, 105, 101, 115, 40, 60, 103, 101, 110, 101, 114, 97, 116, 101, 100, 62, 41, 10, 9, 97, 116, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 115, 101, 114, 118, 105, 99, 101, 46, 83, 101, 99, 117, 114, 105, 116, 121, 83, 101, 114, 118, 105, 99, 101, 46, 112, 114, 105, 111, 114, 105, 116, 105, 101, 115, 65, 119, 97, 114, 101, 83, 97, 118, 101, 40, 83, 101, 99, 117, 114, 105, 116, 121, 83, 101, 114, 118, 105, 99, 101, 46, 107, 116, 58, 49, 49, 55, 41, 10, 9, 97, 116, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 115, 101, 114, 118, 105, 99, 101, 46, 83, 101, 99, 117, 114, 105, 116, 121, 83, 101, 114, 118, 105, 99, 101, 46, 115, 97, 118, 101, 40, 83, 101, 99, 117, 114, 105, 116, 121, 83, 101, 114, 118, 105, 99, 101, 46, 107, 116, 58, 49, 48, 50, 41, 10, 9, 97, 116, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 115, 101, 114, 118, 105, 99, 101, 46, 83, 101, 99, 117, 114, 105, 116, 121, 83, 101, 114, 118, 105, 99, 101, 46, 115, 97, 118, 101, 83, 101, 99, 117, 114, 105, 116, 121, 40, 83, 101, 99, 117, 114, 105, 116, 121, 83, 101, 114, 118, 105, 99, 101, 46, 107, 116, 58, 55, 56, 41, 10, 9, 97, 116, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 115, 101, 114, 118, 105, 99, 101, 46, 83, 101, 99, 117, 114, 105, 116, 121, 83, 101, 114, 118, 105, 99, 101, 36, 36, 70, 97, 115, 116, 67, 108, 97, 115, 115, 66, 121, 83, 112, 114, 105, 110, 103, 67, 71, 76, 73, 66, 36, 36, 50, 100, 54, 49, 54, 98, 49, 98, 46, 105, 110, 118, 111, 107, 101, 40, 60, 103, 101, 110, 101, 114, 97, 116, 101, 100, 62, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 99, 103, 108, 105, 98, 46, 112, 114, 111, 120, 121, 46, 77, 101, 116, 104, 111, 100, 80, 114, 111, 120, 121, 46, 105, 110, 118, 111, 107, 101, 40, 77, 101, 116, 104, 111, 100, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 50, 49, 56, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 36, 67, 103, 108, 105, 98, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 105, 110, 118, 111, 107, 101, 74, 111, 105, 110, 112, 111, 105, 110, 116, 40, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 55, 57, 50, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 82, 101, 102, 108, 101, 99, 116, 105, 118, 101, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111, 99, 101, 101, 100, 40, 82, 101, 102, 108, 101, 99, 116, 105, 118, 101, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 106, 97, 118, 97, 58, 49, 54, 51, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 36, 67, 103, 108, 105, 98, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111, 99, 101, 101, 100, 40, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 55, 54, 50, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 116, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 46, 105, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 73, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 36, 49, 46, 112, 114, 111, 99, 101, 101, 100, 87, 105, 116, 104, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 40, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 73, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 106, 97, 118, 97, 58, 49, 50, 51, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 116, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 46, 105, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 65, 115, 112, 101, 99, 116, 83, 117, 112, 112, 111, 114, 116, 46, 105, 110, 118, 111, 107, 101, 87, 105, 116, 104, 105, 110, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 40, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 65, 115, 112, 101, 99, 116, 83, 117, 112, 112, 111, 114, 116, 46, 106, 97, 118, 97, 58, 51, 56, 56, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 116, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 46, 105, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 73, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 105, 110, 118, 111, 107, 101, 40, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 73, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 106, 97, 118, 97, 58, 49, 49, 57, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 82, 101, 102, 108, 101, 99, 116, 105, 118, 101, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111, 99, 101, 101, 100, 40, 82, 101, 102, 108, 101, 99, 116, 105, 118, 101, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 106, 97, 118, 97, 58, 49, 56, 54, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 36, 67, 103, 108, 105, 98, 77, 101, 116, 104, 111, 100, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111, 99, 101, 101, 100, 40, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 55, 54, 50, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 97, 111, 112, 46, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 36, 68, 121, 110, 97, 109, 105, 99, 65, 100, 118, 105, 115, 101, 100, 73, 110, 116, 101, 114, 99, 101, 112, 116, 111, 114, 46, 105, 110, 116, 101, 114, 99, 101, 112, 116, 40, 67, 103, 108, 105, 98, 65, 111, 112, 80, 114, 111, 120, 121, 46, 106, 97, 118, 97, 58, 55, 48, 55, 41, 10, 9, 97, 116, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 115, 101, 114, 118, 105, 99, 101, 46, 83, 101, 99, 117, 114, 105, 116, 121, 83, 101, 114, 118, 105, 99, 101, 36, 36, 69, 110, 104, 97, 110, 99, 101, 114, 66, 121, 83, 112, 114, 105, 110, 103, 67, 71, 76, 73, 66, 36, 36, 54, 48, 101, 51, 56, 53, 97, 57, 46, 115, 97, 118, 101, 83, 101, 99, 117, 114, 105, 116, 121, 40, 60, 103, 101, 110, 101, 114, 97, 116, 101, 100, 62, 41, 10, 9, 97, 116, 32, 114, 117, 46, 97, 108, 102, 97, 99, 97, 112, 105, 116, 97, 108, 46, 109, 100, 97, 46, 97, 112, 105, 46, 115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 97, 112, 105, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 83, 101, 99, 117, 114, 105, 116, 121, 68, 97, 116, 97, 69, 118, 101, 110, 116, 66, 97, 116, 99, 104, 76, 105, 115, 116, 101, 110, 101, 114, 46, 115, 101, 99, 117, 114, 105, 116, 121, 68, 97, 116, 97, 69, 118, 101, 110, 116, 66, 97, 116, 99, 104, 40, 83, 101, 99, 117, 114, 105, 116, 121, 68, 97, 116, 97, 76, 105, 115, 116, 101, 110, 101, 114, 46, 107, 116, 58, 52, 53, 41, 10, 9, 97, 116, 32, 106, 97, 118, 97, 46, 98, 97, 115, 101, 47, 106, 100, 107, 46, 105, 110, 116, 101, 114, 110, 97, 108, 46, 114, 101, 102, 108, 101, 99, 116, 46, 68, 105, 114, 101, 99, 116, 77, 101, 116, 104, 111, 100, 72, 97, 110, 100, 108, 101, 65, 99, 99, 101, 115, 115, 111, 114, 46, 105, 110, 118, 111, 107, 101, 40, 68, 105, 114, 101, 99, 116, 77, 101, 116, 104, 111, 100, 72, 97, 110, 100, 108, 101, 65, 99, 99, 101, 115, 115, 111, 114, 46, 106, 97, 118, 97, 58, 49, 48, 52, 41, 10, 9, 97, 116, 32, 106, 97, 118, 97, 46, 98, 97, 115, 101, 47, 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 114, 101, 102, 108, 101, 99, 116, 46, 77, 101, 116, 104, 111, 100, 46, 105, 110, 118, 111, 107, 101, 40, 77, 101, 116, 104, 111, 100, 46, 106, 97, 118, 97, 58, 53, 55, 55, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 109, 101, 115, 115, 97, 103, 105, 110, 103, 46, 104, 97, 110, 100, 108, 101, 114, 46, 105, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 73, 110, 118, 111, 99, 97, 98, 108, 101, 72, 97, 110, 100, 108, 101, 114, 77, 101, 116, 104, 111, 100, 46, 100, 111, 73, 110, 118, 111, 107, 101, 40, 73, 110, 118, 111, 99, 97, 98, 108, 101, 72, 97, 110, 100, 108, 101, 114, 77, 101, 116, 104, 111, 100, 46, 106, 97, 118, 97, 58, 49, 54, 57, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 109, 101, 115, 115, 97, 103, 105, 110, 103, 46, 104, 97, 110, 100, 108, 101, 114, 46, 105, 110, 118, 111, 99, 97, 116, 105, 111, 110, 46, 73, 110, 118, 111, 99, 97, 98, 108, 101, 72, 97, 110, 100, 108, 101, 114, 77, 101, 116, 104, 111, 100, 46, 105, 110, 118, 111, 107, 101, 40, 73, 110, 118, 111, 99, 97, 98, 108, 101, 72, 97, 110, 100, 108, 101, 114, 77, 101, 116, 104, 111, 100, 46, 106, 97, 118, 97, 58, 49, 49, 57, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 97, 100, 97, 112, 116, 101, 114, 46, 72, 97, 110, 100, 108, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 105, 110, 118, 111, 107, 101, 40, 72, 97, 110, 100, 108, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 106, 97, 118, 97, 58, 53, 54, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 97, 100, 97, 112, 116, 101, 114, 46, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 105, 110, 118, 111, 107, 101, 72, 97, 110, 100, 108, 101, 114, 40, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 106, 97, 118, 97, 58, 51, 51, 57, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 97, 100, 97, 112, 116, 101, 114, 46, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 105, 110, 118, 111, 107, 101, 40, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 106, 97, 118, 97, 58, 49, 56, 48, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 97, 100, 97, 112, 116, 101, 114, 46, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 111, 110, 77, 101, 115, 115, 97, 103, 101, 40, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 106, 97, 118, 97, 58, 49, 55, 50, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 97, 100, 97, 112, 116, 101, 114, 46, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 111, 110, 77, 101, 115, 115, 97, 103, 101, 40, 66, 97, 116, 99, 104, 77, 101, 115, 115, 97, 103, 105, 110, 103, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 65, 100, 97, 112, 116, 101, 114, 46, 106, 97, 118, 97, 58, 54, 49, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 107, 97, 102, 107, 97, 46, 108, 105, 115, 116, 101, 110, 101, 114, 46, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 36, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 115, 117, 109, 101, 114, 46, 100, 111, 73, 110, 118, 111, 107, 101, 66, 97, 116, 99, 104, 79, 110, 77, 101, 115, 115, 97, 103, 101, 40, 75, 97, 102, 107, 97, 77, 101, 115, 115, 97, 103, 101, 76, 105, 115, 116, 101, 110, 101, 114, 67, 111, 110, 116, 97, 105, 110, 101, 114, 46, 106, 97, 118, 97, 58, 50, 50, 57, 56, 41, 10, 9, 46, 46, 46, 32, 49, 49, 32, 109, 111, 114, 101, 10, 67, 97, 117, 115, 101, 100, 32, 98, 121, 58, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 117, 116, 105, 108, 46, 80, 83, 81, 76, 69, 120, 99, 101, 112, 116, 105, 111, 110, 58, 32, 69, 82, 82, 79, 82, 58, 32, 100, 117, 112, 108, 105, 99, 97, 116, 101, 32, 107, 101, 121, 32, 118, 97, 108, 117, 101, 32, 118, 105, 111, 108, 97, 116, 101, 115, 32, 117, 110, 105, 113, 117, 101, 32, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 32, 34, 115, 101, 99, 117, 114, 105, 116, 121, 95, 117, 107, 49, 34, 10, 32, 32, -48, -97, -48, -66, -48, -76, -47, -128, -48, -66, -48, -79, -48, -67, -48, -66, -47, -127, -47, -126, -48, -72, 58, 32, 75, 101, 121, 32, 40, 105, 115, 105, 110, 41, 61, 40, 73, 83, 73, 78, 49, 41, 32, 97, 108, 114, 101, 97, 100, 121, 32, 101, 120, 105, 115, 116, 115, 46, 10, 9, 97, 116, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 99, 111, 114, 101, 46, 118, 51, 46, 81, 117, 101, 114, 121, 69, 120, 101, 99, 117, 116, 111, 114, 73, 109, 112, 108, 46, 114, 101, 99, 101, 105, 118, 101, 69, 114, 114, 111, 114, 82, 101, 115, 112, 111, 110, 115, 101, 40, 81, 117, 101, 114, 121, 69, 120, 101, 99, 117, 116, 111, 114, 73, 109, 112, 108, 46, 106, 97, 118, 97, 58, 50, 54, 55, 53, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 99, 111, 114, 101, 46, 118, 51, 46, 81, 117, 101, 114, 121, 69, 120, 101, 99, 117, 116, 111, 114, 73, 109, 112, 108, 46, 112, 114, 111, 99, 101, 115, 115, 82, 101, 115, 117, 108, 116, 115, 40, 81, 117, 101, 114, 121, 69, 120, 101, 99, 117, 116, 111, 114, 73, 109, 112, 108, 46, 106, 97, 118, 97, 58, 50, 51, 54, 53, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 99, 111, 114, 101, 46, 118, 51, 46, 81, 117, 101, 114, 121, 69, 120, 101, 99, 117, 116, 111, 114, 73, 109, 112, 108, 46, 101, 120, 101, 99, 117, 116, 101, 40, 81, 117, 101, 114, 121, 69, 120, 101, 99, 117, 116, 111, 114, 73, 109, 112, 108, 46, 106, 97, 118, 97, 58, 53, 53, 57, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 106, 100, 98, 99, 46, 80, 103, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 105, 110, 116, 101, 114, 110, 97, 108, 69, 120, 101, 99, 117, 116, 101, 66, 97, 116, 99, 104, 40, 80, 103, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 106, 97, 118, 97, 58, 56, 56, 55, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 106, 100, 98, 99, 46, 80, 103, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 101, 120, 101, 99, 117, 116, 101, 66, 97, 116, 99, 104, 40, 80, 103, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 106, 97, 118, 97, 58, 57, 49, 48, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 106, 100, 98, 99, 46, 80, 103, 80, 114, 101, 112, 97, 114, 101, 100, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 101, 120, 101, 99, 117, 116, 101, 66, 97, 116, 99, 104, 40, 80, 103, 80, 114, 101, 112, 97, 114, 101, 100, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 106, 97, 118, 97, 58, 49, 54, 52, 57, 41, 10, 9, 97, 116, 32, 99, 111, 109, 46, 122, 97, 120, 120, 101, 114, 46, 104, 105, 107, 97, 114, 105, 46, 112, 111, 111, 108, 46, 80, 114, 111, 120, 121, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 101, 120, 101, 99, 117, 116, 101, 66, 97, 116, 99, 104, 40, 80, 114, 111, 120, 121, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 106, 97, 118, 97, 58, 49, 50, 55, 41, 10, 9, 97, 116, 32, 99, 111, 109, 46, 122, 97, 120, 120, 101, 114, 46, 104, 105, 107, 97, 114, 105, 46, 112, 111, 111, 108, 46, 72, 105, 107, 97, 114, 105, 80, 114, 111, 120, 121, 80, 114, 101, 112, 97, 114, 101, 100, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 101, 120, 101, 99, 117, 116, 101, 66, 97, 116, 99, 104, 40, 72, 105, 107, 97, 114, 105, 80, 114, 111, 120, 121, 80, 114, 101, 112, 97, 114, 101, 100, 83, 116, 97, 116, 101, 109, 101, 110, 116, 46, 106, 97, 118, 97, 41, 10, 9, 97, 116, 32, 99, 111, 109, 46, 112, 54, 115, 112, 121, 46, 101, 110, 103, 105, 110, 101, 46, 119, 114, 97, 112, 112, 101, 114, 46, 83, 116, 97, 116, 101, 109, 101, 110, 116, 87, 114, 97, 112, 112, 101, 114, 46, 101, 120, 101, 99, 117, 116, 101, 66, 97, 116, 99, 104, 40, 83, 116, 97, 116, 101, 109, 101, 110, 116, 87, 114, 97, 112, 112, 101, 114, 46, 106, 97, 118, 97, 58, 57, 56, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 106, 100, 98, 99, 46, 99, 111, 114, 101, 46, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 108, 97, 109, 98, 100, 97, 36, 98, 97, 116, 99, 104, 85, 112, 100, 97, 116, 101, 36, 52, 40, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 106, 97, 118, 97, 58, 49, 48, 53, 48, 41, 10, 9, 97, 116, 32, 111, 114, 103, 46, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 46, 106, 100, 98, 99, 46, 99, 111, 114, 101, 46, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 101, 120, 101, 99, 117, 116, 101, 40, 74, 100, 98, 99, 84, 101, 109, 112, 108, 97, 116, 101, 46, 106, 97, 118, 97, 58, 54, 53, 48, 41, 10, 9, 46, 46, 46, 32, 53, 49, 32, 109, 111, 114, 101, 10]), RecordHeader(key = kafka_dlt-original-topic, value = [109, 100, 46, 115, 101, 99, 117, 114, 105, 116, 121, 46, 100, 97, 116, 97, 46, 98, 97, 116, 99, 104]), RecordHeader(key = kafka_dlt-original-partition, value = [0, 0, 0, 0]), RecordHeader(key = kafka_dlt-original-offset, value = [0, 0, 0, 0, 0, 0, 0, 6]), RecordHeader(key = kafka_dlt-original-timestamp, value = [0, 0, 1, -114, -98, 51, 26, 118]), RecordHeader(key = kafka_dlt-original-timestamp-type, value = [67, 114, 101, 97, 116, 101, 84, 105, 109, 101]), RecordHeader(key = kafka_dlt-original-consumer-group, value = [115, 101, 99, 117, 114, 105, 116, 105, 101, 115, 45, 97, 112, 105])], isReadOnly = false), key = null, value = {
  "status": "SECURITY_FOUND",
  "integrationSource": "BDL",
  "isin": "ISIN1",
  "timestamp": "2020-01-01T00:00:00",
  "security": {
    "isin": "ISIN1",
    "name": "MINFIN ROSSII 2 31/10/20",
    "type": "SEC",
    "active": false,
    "statusDescription": "Размещен",
    "fields": [
      
        {
          "code": "ISIN"
          
          , "value": "ISIN1" 
          
        } 
      
    ]
  }
}), sending to DLQ: md.security.data.dlq-0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventListener.securityDataEvent(ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEvent)' threw exception; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2720)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2690)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2650)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2577)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2457)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2335)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2006)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [
    merge into security as sec
    using (
        with
          ids as (select distinct security from security_id where (type = (select id from security_id_type where code in ('ISIN')) and id in (?))),
          src as (select id from source where code = ?)
        select
            ids.security as sec_id,
            src.id as source,
            ? as uid,
            ? as name,
            ? as type,
            ? as is_active,
            ? as status_desc
        from src left join ids on true) inc
    on (sec.id = inc.sec_id)
    when matched then
        update set
            name = inc.name,
            type = inc.type,
            updated_at = current_timestamp,
            is_active = inc.is_active,
            status_description = inc.status_desc,
            source = inc.source
    when not matched then
        insert (isin, name, type, is_active, status_description, source)
        values (inc.uid, inc.name, inc.type, inc.is_active, inc.status_desc, inc.source)
    ]; ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.; nested exception is org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:244)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1577)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:693)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:1036)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:376)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository.saveSecurities(SecurityRepository.kt:218)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository$$FastClassBySpringCGLIB$$cf05edcd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at ru.alfacapital.mda.api.securitiesapi.repository.SecurityRepository$$EnhancerBySpringCGLIB$$c1486a3d.saveSecurities(<generated>)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.prioritiesAwareSave(SecurityService.kt:117)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.save(SecurityService.kt:102)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService.saveSecurity(SecurityService.kt:78)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService$$FastClassBySpringCGLIB$$2d616b1b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at ru.alfacapital.mda.api.securitiesapi.service.SecurityService$$EnhancerBySpringCGLIB$$60e385a9.saveSecurity(<generated>)
	at ru.alfacapital.mda.api.securitiesapi.listener.SecurityDataEventListener.securityDataEvent(SecurityDataListener.kt:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$547e39f2.onMessage(<generated>)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2670)
	... 11 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "security_uk1"
  Подробности: Key (isin)=(ISIN1) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:887)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:910)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1649)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:127)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.executeBatch(StatementWrapper.java:98)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$4(JdbcTemplate.java:1050)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:650)
	... 60 common frames omitted
12:45:41.177 [Test worker] WARN  i.g.a.c.e.e.d.c.check.DbVerifier.verify-0E7RQCE - Check failed
org.awaitility.core.ConditionTimeoutException: Condition with alias 'Await DB table field_value' didn't complete within 8 seconds because assertion condition defined as a io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier table content mismatch:
"field" in row 1: Actual value='64' is not equal to expected value='65'
"security" in row 1: Actual value='15' is not equal to expected value='3'
"value" in row 1: Actual value='Акции' is not equal to expected value='ISIN1'.
	at org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)
	at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:119)
	at org.awaitility.core.AssertionCondition.await(AssertionCondition.java:31)
	at org.awaitility.core.ConditionFactory.until(ConditionFactory.java:985)
	at org.awaitility.core.ConditionFactory.untilAsserted(ConditionFactory.java:769)
	at io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier.verify-0E7RQCE(DbVerifier.kt:48)
	at io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier.verify-0E7RQCE(DbVerifier.kt:22)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamAssertCommand.verify(ExamVerifyCommand.kt:111)
	at io.github.adven27.concordion.extensions.exam.db.commands.check.CheckCommand.verify(CheckCommand.kt:43)
	at org.concordion.api.AbstractCommandDecorator$3.run(AbstractCommandDecorator.java:33)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.verify(AbstractCommandDecorator.java:31)
	at org.concordion.api.AbstractCommandDecorator$3.run(AbstractCommandDecorator.java:33)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.verify(AbstractCommandDecorator.java:31)
	at org.concordion.api.CommandCall.verify(CommandCall.java:76)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:34)
	at io.github.adven27.concordion.extensions.exam.core.commands.ExamCommand.execute(ExamCommand.kt:62)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.ExampleCommand.execute(ExampleCommand.java:49)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:76)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:105)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:62)
	at org.junit.runner.JUnitCore.runClasses(JUnitCore.java:49)
	at org.concordion.internal.runner.DefaultConcordionRunner.runJUnitClass(DefaultConcordionRunner.java:78)
	at org.concordion.internal.runner.DefaultConcordionRunner.runTestClass(DefaultConcordionRunner.java:44)
	at org.concordion.internal.runner.DefaultConcordionRunner.execute(DefaultConcordionRunner.java:19)
	at org.concordion.internal.command.SequentialRunStrategy.call(SequentialRunStrategy.java:10)
	at org.concordion.internal.command.RunCommand.execute(RunCommand.java:81)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.LocalTextDecorator.process(LocalTextDecorator.java:26)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.AbstractCommandDecorator$2.run(AbstractCommandDecorator.java:25)
	at org.concordion.internal.command.ThrowableCatchingDecorator.process(ThrowableCatchingDecorator.java:38)
	at org.concordion.api.AbstractCommandDecorator.execute(AbstractCommandDecorator.java:23)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.api.CommandCallList.processSequentially(CommandCallList.java:33)
	at org.concordion.internal.command.SpecificationCommand.execute(SpecificationCommand.java:36)
	at org.concordion.api.CommandCall.execute(CommandCall.java:72)
	at org.concordion.internal.XMLSpecification.processNode(XMLSpecification.java:60)
	at org.concordion.internal.XMLSpecification.processExample(XMLSpecification.java:69)
	at org.concordion.Concordion.processExample(Concordion.java:92)
	at org.concordion.internal.FixtureRunner.run(FixtureRunner.java:41)
	at org.concordion.integration.junit4.ConcordionRunner.invoke(ConcordionRunner.java:207)
	at org.concordion.integration.junit4.ConcordionRunner$1.invoke(ConcordionRunner.java:31)
	at org.concordion.integration.junit4.ConcordionFrameworkMethod.invokeExplosively(ConcordionFrameworkMethod.java:58)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:191)
	at org.concordion.integration.junit4.ConcordionRunner.runChild(ConcordionRunner.java:23)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.concordion.integration.junit4.ConcordionRunner.run(ConcordionRunner.java:150)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)
	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)
	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:110)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:85)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy2/jdk.proxy2.$Proxy5.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier$TableContentMismatch: table content mismatch:
"field" in row 1: Actual value='64' is not equal to expected value='65'
"security" in row 1: Actual value='15' is not equal to expected value='3'
"value" in row 1: Actual value='Акции' is not equal to expected value='ISIN1'
	at io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier.dbUnitAssert(DbVerifier.kt:80)
	at io.github.adven27.concordion.extensions.exam.db.commands.check.DbVerifier.verify_0E7RQCE$lambda$1$lambda$0(DbVerifier.kt:54)
	at org.awaitility.core.AssertionCondition.lambda$new$0(AssertionCondition.java:53)
	at org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:248)
	at org.awaitility.core.ConditionAwaiter$ConditionPoller.call(ConditionAwaiter.java:235)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
12:45:41.453 [http-nio-54797-exec-7] INFO  r.a.m.a.s.service.SecurityService.saveManualField - Adding field value: PARENT_ISIN, ISIN2, ISIN1, 2022-09-12
12:45:41.477 [http-nio-54797-exec-7] TRACE org.zalando.logbook.Logbook.write - {
  "origin" : "remote",
  "type" : "request",
  "correlation" : "c8442b62e9bc6fed",
  "protocol" : "HTTP/1.1",
  "remote" : "127.0.0.1",
  "method" : "POST",
  "uri" : "http://localhost:54797/securities/ISIN1/field",
  "host" : "localhost",
  "path" : "/securities/ISIN1/field",
  "scheme" : "http",
  "port" : "54797",
  "headers" : {
    "accept" : [ "*/*" ],
    "accept-encoding" : [ "gzip,deflate" ],
    "connection" : [ "Keep-Alive" ],
    "content-length" : [ "79" ],
    "content-type" : [ "application/json" ],
    "host" : [ "localhost:54797" ],
    "user-agent" : [ "Apache-HttpClient/4.5.14 (Java/18.0.1.1)" ]
  }
}
12:45:41.477 [http-nio-54797-exec-7] TRACE org.zalando.logbook.Logbook.write - {
  "origin" : "local",
  "type" : "response",
  "correlation" : "c8442b62e9bc6fed",
  "duration" : 48,
  "protocol" : "HTTP/1.1",
  "status" : 200,
  "headers" : {
    "Connection" : [ "keep-alive" ],
    "Date" : [ "Tue, 02 Apr 2024 09:45:41 GMT" ],
    "Keep-Alive" : [ "timeout=60" ],
    "Transfer-Encoding" : [ "chunked" ]
  }
}
12:45:41.508 [http-nio-54797-exec-8] INFO  r.a.m.a.s.service.SecurityService.saveManualField - Adding field value: PARENT_ISIN, NEW_ISIN, ISIN1, 2022-09-13
12:45:41.518 [http-nio-54797-exec-8] TRACE org.zalando.logbook.Logbook.write - {
  "origin" : "remote",
  "type" : "request",
  "correlation" : "9b28adff2b64063d",
  "protocol" : "HTTP/1.1",
  "remote" : "127.0.0.1",
  "method" : "POST",
  "uri" : "http://localhost:54797/securities/ISIN1/field",
  "host" : "localhost",
  "path" : "/securities/ISIN1/field",
  "scheme" : "http",
  "port" : "54797",
  "headers" : {
    "accept" : [ "*/*" ],
    "accept-encoding" : [ "gzip,deflate" ],
    "connection" : [ "Keep-Alive" ],
    "content-length" : [ "82" ],
    "content-type" : [ "application/json" ],
    "host" : [ "localhost:54797" ],
    "user-agent" : [ "Apache-HttpClient/4.5.14 (Java/18.0.1.1)" ]
  }
}
12:45:41.519 [http-nio-54797-exec-8] TRACE org.zalando.logbook.Logbook.write - {
  "origin" : "local",
  "type" : "response",
  "correlation" : "9b28adff2b64063d",
  "duration" : 11,
  "protocol" : "HTTP/1.1",
  "status" : 200,
  "headers" : {
    "Connection" : [ "keep-alive" ],
    "Date" : [ "Tue, 02 Apr 2024 09:45:41 GMT" ],
    "Keep-Alive" : [ "timeout=60" ],
    "Transfer-Encoding" : [ "chunked" ]
  }
}
12:45:41.542 [http-nio-54797-exec-11] INFO  r.a.m.a.s.service.SecurityService.saveManualField - Adding field value: PARENT_ISIN, NEW_ISIN_2, ISIN1, 2022-09-13
12:45:41.555 [http-nio-54797-exec-11] TRACE org.zalando.logbook.Logbook.write - {
  "origin" : "remote",
  "type" : "request",
  "correlation" : "a56c5f8b17163b67",
  "protocol" : "HTTP/1.1",
  "remote" : "127.0.0.1",
  "method" : "POST",
  "uri" : "http://localhost:54797/securities/ISIN1/field",
  "host" : "localhost",
  "path" : "/securities/ISIN1/field",
  "scheme" : "http",
  "port" : "54797",
  "headers" : {
    "accept" : [ "*/*" ],
    "accept-encoding" : [ "gzip,deflate" ],
    "connection" : [ "Keep-Alive" ],
    "content-length" : [ "84" ],
    "content-type" : [ "application/json" ],
    "host" : [ "localhost:54797" ],
    "user-agent" : [ "Apache-HttpClient/4.5.14 (Java/18.0.1.1)" ]
  }
}
12:45:41.555 [http-nio-54797-exec-11] TRACE org.zalando.logbook.Logbook.write - {
  "origin" : "local",
  "type" : "response",
  "correlation" : "a56c5f8b17163b67",
  "duration" : 13,
  "protocol" : "HTTP/1.1",
  "status" : 200,
  "headers" : {
    "Connection" : [ "keep-alive" ],
    "Date" : [ "Tue, 02 Apr 2024 09:45:41 GMT" ],
    "Keep-Alive" : [ "timeout=60" ],
    "Transfer-Encoding" : [ "chunked" ]
  }
}
12:45:41.635 [http-nio-54797-exec-3] INFO  r.a.m.a.s.service.SecurityService.saveManualField - Adding field value: FIELD-1234, NEW_ISIN_2, ISIN1, 2022-09-13
12:45:41.643 [http-nio-54797-exec-3] TRACE org.zalando.logbook.Logbook.write - {
  "origin" : "remote",
  "type" : "request",
  "correlation" : "c925da22213b39c3",
  "protocol" : "HTTP/1.1",
  "remote" : "127.0.0.1",
  "method" : "POST",
  "uri" : "http://localhost:54797/securities/ISIN1/field",
  "host" : "localhost",
  "path" : "/securities/ISIN1/field",
  "scheme" : "http",
  "port" : "54797",
  "headers" : {
    "accept" : [ "*/*" ],
    "accept-encoding" : [ "gzip,deflate" ],
    "connection" : [ "Keep-Alive" ],
    "content-length" : [ "83" ],
    "content-type" : [ "application/json" ],
    "host" : [ "localhost:54797" ],
    "user-agent" : [ "Apache-HttpClient/4.5.14 (Java/18.0.1.1)" ]
  },
  "body" : {"code":"FIELD-1234","value":"NEW_ISIN_2","timestamp":"2022-09-13T00:00:00"}
}
12:45:41.643 [http-nio-54797-exec-3] TRACE org.zalando.logbook.Logbook.write - {
  "origin" : "local",
  "type" : "response",
  "correlation" : "c925da22213b39c3",
  "duration" : 8,
  "protocol" : "HTTP/1.1",
  "status" : 400,
  "headers" : {
    "Connection" : [ "close" ],
    "Content-Type" : [ "application/json" ],
    "Date" : [ "Tue, 02 Apr 2024 09:45:41 GMT" ],
    "Transfer-Encoding" : [ "chunked" ]
  },
  "body" : {"message":"Unknown field FIELD-1234"}
}
